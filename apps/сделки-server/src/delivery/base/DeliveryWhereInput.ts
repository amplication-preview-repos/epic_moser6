/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumDeliveryStatus } from "./EnumDeliveryStatus";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumDeliverySupplierPaymentStatus } from "./EnumDeliverySupplierPaymentStatus";
import { EnumDeliveryClientPaymentStatus } from "./EnumDeliveryClientPaymentStatus";
import { EnumDeliveryGuSubmissionStatus } from "./EnumDeliveryGuSubmissionStatus";
import { EnumDeliveryFss } from "./EnumDeliveryFss";
import { EnumDeliverySt1 } from "./EnumDeliverySt1";
import { EnumDeliverySurvey } from "./EnumDeliverySurvey";
import { EnumDeliveryHedgeStatus } from "./EnumDeliveryHedgeStatus";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";
import { ClientWhereUniqueInput } from "../../client/base/ClientWhereUniqueInput";
import { SupplierWhereUniqueInput } from "../../supplier/base/SupplierWhereUniqueInput";
import { TransporterWhereUniqueInput } from "../../transporter/base/TransporterWhereUniqueInput";
import { ManagerWhereUniqueInput } from "../../manager/base/ManagerWhereUniqueInput";

@InputType()
class DeliveryWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  deliveryNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  secured?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliveryStatus,
  })
  @IsEnum(EnumDeliveryStatus)
  @IsOptional()
  @Field(() => EnumDeliveryStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  saleVolume?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  salePrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  totalAmount?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  basis?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  purchaseRegion?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  purchaseVolume?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  deficit?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  averagePurchasePrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  transportRate?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  startOfShipment?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  contractTrainDispatch?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  vesselDispatch?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliverySupplierPaymentStatus,
  })
  @IsEnum(EnumDeliverySupplierPaymentStatus)
  @IsOptional()
  @Field(() => EnumDeliverySupplierPaymentStatus, {
    nullable: true,
  })
  supplierPaymentStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  paymentToSupplier?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  invoiceDirectionDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  clientAdvance?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  advanceAmount?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  documentDispatchDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliveryClientPaymentStatus,
  })
  @IsEnum(EnumDeliveryClientPaymentStatus)
  @IsOptional()
  @Field(() => EnumDeliveryClientPaymentStatus, {
    nullable: true,
  })
  clientPaymentStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  clientPaymentAmount?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliveryGuSubmissionStatus,
  })
  @IsEnum(EnumDeliveryGuSubmissionStatus)
  @IsOptional()
  @Field(() => EnumDeliveryGuSubmissionStatus, {
    nullable: true,
  })
  guSubmissionStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  cnyExchangeRate?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  exportContractNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  deliveryOwner?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  actualShipped?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  plannedTrainDispatch?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  actualTrainDispatch?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  comments?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  finish?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliveryFss,
  })
  @IsEnum(EnumDeliveryFss)
  @IsOptional()
  @Field(() => EnumDeliveryFss, {
    nullable: true,
  })
  fss?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumDeliverySt1,
  })
  @IsEnum(EnumDeliverySt1)
  @IsOptional()
  @Field(() => EnumDeliverySt1, {
    nullable: true,
  })
  st1?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumDeliverySurvey,
  })
  @IsEnum(EnumDeliverySurvey)
  @IsOptional()
  @Field(() => EnumDeliverySurvey, {
    nullable: true,
  })
  survey?: "Option1";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  paymentProblems?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  estimatedLogisticsRate?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliveryHedgeStatus,
  })
  @IsEnum(EnumDeliveryHedgeStatus)
  @IsOptional()
  @Field(() => EnumDeliveryHedgeStatus, {
    nullable: true,
  })
  hedgeStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  product?: ProductWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ClientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientWhereUniqueInput, {
    nullable: true,
  })
  client?: ClientWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SupplierWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SupplierWhereUniqueInput)
  @IsOptional()
  @Field(() => SupplierWhereUniqueInput, {
    nullable: true,
  })
  supplier?: SupplierWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TransporterWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TransporterWhereUniqueInput)
  @IsOptional()
  @Field(() => TransporterWhereUniqueInput, {
    nullable: true,
  })
  transporter?: TransporterWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ManagerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ManagerWhereUniqueInput)
  @IsOptional()
  @Field(() => ManagerWhereUniqueInput, {
    nullable: true,
  })
  manager?: ManagerWhereUniqueInput;
}

export { DeliveryWhereInput as DeliveryWhereInput };
